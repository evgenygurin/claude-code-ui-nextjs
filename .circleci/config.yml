version: 2.1

# CircleCI orbs for common tasks
orbs:
  node: circleci/node@5.2.0

# Define reusable executors
executors:
  node-executor:
    docker:
      - image: cimg/node:20.10
    working_directory: ~/project
    environment:
      NPM_CONFIG_CACHE: /home/circleci/.npm

# Define jobs
jobs:
  # Install dependencies and cache them
  install_dependencies:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  # Run linting
  lint:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Run Linting
          command: npm run lint

  # Run type checking
  type_check:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Type Checking
          command: npm run type-check

  # Run tests
  test:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Run Tests
          command: npm run test:ci

  # Build the application
  build:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Build Application
          command: npm run build
      - run:
          name: Check Build Size
          command: |
            echo "Build completed successfully"
            du -sh .next || echo "Build output check completed"
      - persist_to_workspace:
          root: ~/project
          paths:
            - .next

  # Security scanning
  security_scan:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Install TruffleHog
          command: |
            curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
      - run:
          name: Scan for Secrets
          command: |
            echo "üîç Scanning for hardcoded secrets..."
            trufflehog filesystem --directory=. --exclude-paths=.trufflehogignore --no-verification --json > trufflehog-results.json || true

            # Check if results file exists and has content
            if [ -s trufflehog-results.json ]; then
              echo "‚ùå SECURITY ALERT: Potential secrets detected!"
              cat trufflehog-results.json
              exit 1
            else
              echo "‚úÖ No hardcoded secrets detected"
            fi

  # Deploy preview (placeholder for now)
  deploy_preview:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploy Preview (Placeholder)
          command: |
            echo "üöÄ Preview deployment would happen here"
            echo "Skipping actual deployment to avoid environment issues"

# Define workflows
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install_dependencies

      - lint:
          requires:
            - install_dependencies

      - type_check:
          requires:
            - install_dependencies

      - test:
          requires:
            - install_dependencies

      - build:
          requires:
            - install_dependencies

      - security_scan:
          requires:
            - install_dependencies

      - deploy_preview:
          requires:
            - lint
            - type_check
            - test
            - build
            - security_scan
          filters:
            branches:
              ignore:
                - main
                - master
