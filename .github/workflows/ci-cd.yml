name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  FORCE_COLOR: 1
  CI: true

jobs:
  test:
    name: Test & Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Check code formatting
        run: npm run format:check

      - name: Run tests
        run: npm run test:ci

      - name: Upload coverage reports
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Security scan
        run: |
          echo "🔍 Running security scan..."

          # Install TruffleHog
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin

          # Run security scan
          trufflehog filesystem --directory=. --exclude-paths=.trufflehogignore --no-verification --json > trufflehog-results.json || true

          # Check results
          if [ -s trufflehog-results.json ]; then
            echo "❌ SECURITY ALERT: Potential secrets detected!"
            cat trufflehog-results.json
            exit 1
          else
            echo "✅ No hardcoded secrets detected"
          fi

      - name: Build application
        run: npm run build

      - name: Check build size
        run: |
          echo "📊 Build completed successfully"
          du -sh .next 2>/dev/null || echo "Build directory check completed"

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [test]
    if: success() && github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for preview
        run: npm run build

      - name: Preview deployment placeholder
        run: |
          echo "🚀 Preview deployment would happen here"
          echo "Skipping actual Vercel deployment to avoid token issues"

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: [test]
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

      - name: Production deployment placeholder
        run: |
          echo "🚀 Production deployment would happen here"
          echo "Skipping actual Vercel deployment to avoid token issues"

  success-notification:
    name: Success Notification
    runs-on: ubuntu-latest
    needs: [test]
    if: success()

    steps:
      - name: Notify Success
        run: |
          echo "✅ CI/CD Pipeline completed successfully!"
          echo "🎉 All checks passed:"
          echo "  - ✅ Linting"
          echo "  - ✅ Type checking" 
          echo "  - ✅ Tests"
          echo "  - ✅ Security scan"
          echo "  - ✅ Build"
          echo ""
          echo "🚀 Application is ready for use!"
