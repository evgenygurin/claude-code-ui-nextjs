name: CodeGen Integration

on:
  workflow_dispatch:
    inputs:
      error_type:
        description: 'Type of error to handle'
        required: true
        default: 'manual_trigger'
      error_details:
        description: 'Error details'
        required: false
        default: 'Manual CodeGen trigger'
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Job for automatic triggers (push/PR) - just validates that workflow syntax is correct
  codegen-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: Validate CodeGen Integration Setup
        run: |
          echo "✅ CodeGen Integration workflow validation passed"
          echo "🔍 Event type: ${{ github.event_name }}"
          echo "📋 Branch: ${{ github.ref_name }}"
          echo "💡 This workflow runs automatically to validate syntax but CodeGen features are only active on manual dispatch"
          echo ""
          echo "🤖 To manually trigger CodeGen analysis:"
          echo "   1. Go to Actions tab in GitHub"
          echo "   2. Select 'CodeGen Integration' workflow"
          echo "   3. Click 'Run workflow' and provide error details"
          
      - name: Skip Heavy Operations for PR
        if: github.event_name == 'pull_request'
        run: |
          echo "⚡ Skipping heavy operations for pull request validation"
          echo "✅ Workflow validation complete - CodeGen integration is ready"

  # Job for manual triggers - runs the full CodeGen integration
  codegen-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: CodeGen Handler (Manual Trigger)
        run: |
          echo "🤖 CodeGen manual trigger activated"
          echo "Error Type: ${{ github.event.inputs.error_type }}"
          echo "Error Details: ${{ github.event.inputs.error_details }}"
          echo "This workflow can be used to manually trigger CodeGen analysis"

          ERROR_TYPE="${{ github.event.inputs.error_type || 'ci_failure' }}"
          ERROR_DETAILS="${{ github.event.inputs.error_details || 'CI/CD pipeline failure detected' }}"

          # Run the error handler script (this won't fail the build)
          node scripts/codegen-error-handler.js "$ERROR_TYPE" "$ERROR_DETAILS" || echo "Handler completed"

      - name: Create GitHub Issue for CodeGen
        if: failure() || github.event.inputs.error_type == 'critical'
        uses: actions/github-script@v7
        with:
          script: |
            const errorType = '${{ github.event.inputs.error_type || "ci_failure" }}';
            const errorDetails = '${{ github.event.inputs.error_details || "CI/CD pipeline failure" }}';
            const runUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;

            const issueBody = `🚨 **Automated CI/CD Failure Report**

            **Error Type:** ${errorType}
            **Error Details:** ${errorDetails}
            **Workflow Run:** [${runUrl}](${runUrl})
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Timestamp:** ${new Date().toISOString()}

            ---

            @codegen Please analyze this CI/CD failure and implement fixes:

            ## Required Actions:
            1. 🔍 **Analyze the root cause** of the failure
            2. 🛠️ **Implement specific fixes** for the identified issues
            3. 🧪 **Create/update comprehensive tests** to prevent regression
            4. 📋 **Review and improve CI/CD configuration** if needed
            5. 🔄 **Run the full development cycle** (lint → test → build → deploy)
            6. 📝 **Create/update PR** with all improvements
            7. ⏰ **Schedule follow-up check** in 1 hour if issues persist

            ## Context:
            - Project: \`${{ github.repository }}\`
            - Node.js version: 20.x
            - Framework: Next.js 15
            - CI/CD: CircleCI + GitHub Actions
            - Error handling: Automated CodeGen integration

            **This is an automated issue created by the CI/CD error handling system.**`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 CI/CD Failure: ${errorType} - ${new Date().toISOString().split('T')[0]}`,
              body: issueBody,
              labels: ['ci/cd', 'automated', 'codegen', 'bug', 'priority-high']
            });

  # Job for scheduled tasks - only runs on workflow_dispatch or schedule events
  task-management:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check Pending CodeGen Tasks
        run: |
          echo "⏰ Checking for pending CodeGen tasks..."
          node scripts/task-scheduler.js check

      - name: Schedule New Task if Needed
        run: |
          echo "📋 Scheduling follow-up tasks if needed..."
          # Schedule a follow-up task for this workflow
          node scripts/task-scheduler.js schedule
          echo "Follow-up task scheduled successfully"

      - name: Cleanup Old Tasks
        run: |
          echo "🧹 Cleaning up old completed tasks..."
          node scripts/task-scheduler.js cleanup

  # Summary job - runs after all jobs complete
  workflow-summary:
    runs-on: ubuntu-latest
    if: always()
    needs: [codegen-validation, codegen-analysis, task-management]

    steps:
      - name: Generate Summary
        run: |
          echo "## 🤖 CodeGen Integration Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Job results
          echo "### Job Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Validation:** ${{ needs.codegen-validation.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Analysis:** ${{ needs.codegen-analysis.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Task Management:** ${{ needs.task-management.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Next steps
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "✅ PR validation completed successfully" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "🤖 Manual CodeGen analysis completed" >> $GITHUB_STEP_SUMMARY
          fi