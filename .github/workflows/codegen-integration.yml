name: CodeGen Integration

on:
  workflow_dispatch:
    inputs:
      error_type:
        description: 'Type of error to handle'
        required: true
        default: 'manual_trigger'
      error_details:
        description: 'Error details'
        required: false
        default: 'Manual CodeGen trigger'
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Job for automatic triggers (push/PR) - just validates that workflow syntax is correct
  codegen-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: Validate CodeGen Integration Setup
        run: |
          echo "‚úÖ CodeGen Integration workflow validation passed"
          echo "üîç Event type: ${{ github.event_name }}"
          echo "üìã Branch: ${{ github.ref_name }}"
          echo "üí° This workflow runs automatically to validate syntax but CodeGen features are only active on manual dispatch"
          echo ""
          echo "ü§ñ To manually trigger CodeGen analysis:"
          echo "   1. Go to Actions tab in GitHub"
          echo "   2. Select 'CodeGen Integration' workflow"
          echo "   3. Click 'Run workflow' and provide error details"

  # Job for manual triggers - runs the full CodeGen integration
  codegen-placeholder:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: CodeGen Handler (Manual Trigger)
      run: |
        echo "ü§ñ CodeGen manual trigger activated"
        echo "Error Type: ${{ github.event.inputs.error_type }}"
        echo "Error Details: ${{ github.event.inputs.error_details }}"
        echo "This workflow can be used to manually trigger CodeGen analysis"
        
        ERROR_TYPE="${{ github.event.inputs.error_type || 'ci_failure' }}"
        ERROR_DETAILS="${{ github.event.inputs.error_details || 'CI/CD pipeline failure detected' }}"
        
        # Run the error handler script (this won't fail the build)
        node scripts/codegen-error-handler.js "$ERROR_TYPE" "$ERROR_DETAILS" || echo "Handler completed"

  check-pending-tasks:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check Pending CodeGen Tasks
      run: |
        echo "‚è∞ Checking for pending CodeGen tasks..."
        node scripts/task-scheduler.js check

    - name: Schedule New Task if Needed
      run: |
        echo "üìã Scheduling follow-up tasks if needed..."
        # Schedule a follow-up task for this workflow
        node scripts/task-scheduler.js schedule
        echo "Follow-up task scheduled successfully"

    - name: Cleanup Old Tasks
      run: |
        echo "üßπ Cleaning up old completed tasks..."
        node scripts/task-scheduler.js cleanup

  notify-codegen:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    needs: [codegen-placeholder]
    
    steps:
    - name: Notify CodeGen Service
      run: |
        echo "üì° Notifying CodeGen service about workflow completion..."
        
        # In a real implementation, this would call the CodeGen API
        # to notify about the workflow status and any pending tasks
        
        echo "Workflow Status: ${{ needs.codegen-placeholder.result }}"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        
        # This could trigger a webhook, API call, or create a GitHub comment
        # to notify CodeGen about the current status
        
        echo "‚úÖ CodeGen notification completed"
  
  notify-scheduled-tasks:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    needs: [check-pending-tasks]
    
    steps:
    - name: Notify CodeGen Service About Scheduled Tasks
      run: |
        echo "üì° Notifying CodeGen service about scheduled task completion..."
        
        echo "Task Check Status: ${{ needs.check-pending-tasks.result }}"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        
        echo "‚úÖ Scheduled task notification completed"