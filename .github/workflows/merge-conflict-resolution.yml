name: Robust Merge Conflict Resolution

on:
  push:
    branches: [main, develop, feature/*, hotfix/*]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      resolution_strategy:
        description: 'Strategy for conflict resolution'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - aggressive
          - conservative
          - manual
      enable_monitoring:
        description: 'Enable continuous monitoring'
        required: false
        default: true
        type: boolean
      notification_level:
        description: 'Notification level'
        required: false
        default: 'normal'
        type: choice
        options:
          - silent
          - normal
          - verbose

permissions:
  contents: read
  issues: write
  pull-requests: read

env:
  NODE_VERSION: '20'
  CONFLICT_RESOLUTION_ENABLED: true

jobs:
  detect-conflicts:
    name: üîç Conflict Detection
    runs-on: ubuntu-latest
    outputs:
      has-conflicts: ${{ steps.conflict-check.outputs.has-conflicts }}
      conflict-files: ${{ steps.conflict-check.outputs.conflict-files }}
      conflict-count: ${{ steps.conflict-check.outputs.conflict-count }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "Merge Conflict Bot"
          git config --global user.email "merge-bot@github-actions.local"

      - name: Detect merge conflicts
        id: conflict-check
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è..."

          # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
          git status --porcelain > git_status.txt

          CONFLICT_FILES=""
          CONFLICT_COUNT=0
          HAS_CONFLICTS=false

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏ –≤ —Ç–µ–∫—É—â–µ–º —Å—Ç–∞—Ç—É—Å–µ
          if grep -E "^(UU|AA|DD)" git_status.txt > /dev/null 2>&1; then
            HAS_CONFLICTS=true
            CONFLICT_FILES=$(grep -E "^(UU|AA|DD)" git_status.txt | cut -c4- | tr '\n' ',' | sed 's/,$//')
            CONFLICT_COUNT=$(grep -E "^(UU|AA|DD)" git_status.txt | wc -l)
          fi

          # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –º–∞—Ä–∫–µ—Ä—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö (–∏—Å–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–∫–æ–Ω–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç —ç—Ç–∏ –º–∞—Ä–∫–µ—Ä—ã)
          if git grep -l "<<<<<<< HEAD" -- ':!MERGE_CONFLICT_RESOLUTION.md' ':!scripts/merge-conflict-resolver.js' ':!tests/merge-conflicts/*' ':!.github/workflows/merge-conflict-resolution.yml' > conflict_markers.txt 2>/dev/null; then
            if [ -s conflict_markers.txt ]; then
              HAS_CONFLICTS=true
              MARKER_FILES=$(cat conflict_markers.txt | tr '\n' ',' | sed 's/,$//')
              MARKER_COUNT=$(cat conflict_markers.txt | wc -l)
              
              if [ -n "$CONFLICT_FILES" ]; then
                CONFLICT_FILES="$CONFLICT_FILES,$MARKER_FILES"
              else
                CONFLICT_FILES="$MARKER_FILES"
              fi
              
              CONFLICT_COUNT=$((CONFLICT_COUNT + MARKER_COUNT))
            fi
          fi

          # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–ª–∏—è–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
          if [ "$HAS_CONFLICTS" = "false" ] && [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø—Ä–∏ —Å–ª–∏—è–Ω–∏–∏ PR..."
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –≤–µ—Ç–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–ª–∏—è–Ω–∏—è
            git checkout -b temp-merge-test
            git fetch origin ${{ github.base_ref }}
            
            # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–ª–∏—è–Ω–∏–µ
            if ! git merge origin/${{ github.base_ref }} --no-commit --no-ff > merge_test.log 2>&1; then
              if git status --porcelain | grep -E "^(UU|AA|DD)" > /dev/null; then
                HAS_CONFLICTS=true
                CONFLICT_FILES=$(git status --porcelain | grep -E "^(UU|AA|DD)" | cut -c4- | tr '\n' ',' | sed 's/,$//')
                CONFLICT_COUNT=$(git status --porcelain | grep -E "^(UU|AA|DD)" | wc -l)
                echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø—Ä–∏ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–ª–∏—è–Ω–∏–∏"
              fi
            fi
            
            # –û—Ç–º–µ–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–ª–∏—è–Ω–∏–µ
            git merge --abort 2>/dev/null || true
            git checkout ${{ github.ref_name }}
            git branch -D temp-merge-test
          fi

          echo "has-conflicts=$HAS_CONFLICTS" >> $GITHUB_OUTPUT
          echo "conflict-files=$CONFLICT_FILES" >> $GITHUB_OUTPUT
          echo "conflict-count=$CONFLICT_COUNT" >> $GITHUB_OUTPUT

          if [ "$HAS_CONFLICTS" = "true" ]; then
            echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: $CONFLICT_COUNT"
            echo "üìÅ –§–∞–π–ª—ã —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏: $CONFLICT_FILES"
          else
            echo "‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
          fi

      - name: Upload conflict detection artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: conflict-detection-${{ github.run_number }}
          path: |
            git_status.txt
            conflict_markers.txt
            merge_test.log
          retention-days: 7

  resolve-conflicts:
    name: üõ†Ô∏è Automatic Conflict Resolution
    runs-on: ubuntu-latest
    needs: [detect-conflicts]
    if: needs.detect-conflicts.outputs.has-conflicts == 'true'

    outputs:
      resolution-success: ${{ steps.resolve.outputs.success }}
      resolution-strategy: ${{ steps.resolve.outputs.strategy }}
      resolved-count: ${{ steps.resolve.outputs.resolved-count }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name "Merge Conflict Bot"
          git config --global user.email "merge-bot@github-actions.local"

      - name: Make resolution script executable
        run: chmod +x scripts/merge-conflict-resolver.js

      - name: Automatic conflict resolution
        id: resolve
        run: |
          echo "üõ†Ô∏è –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤..."

          STRATEGY="${{ github.event.inputs.resolution_strategy || 'auto' }}"
          echo "üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: $STRATEGY"

          # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
          mkdir -p .conflict-resolution-reports

          # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∑–æ–ª–≤–µ—Ä —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
          if node scripts/merge-conflict-resolver.js --verbose > resolution.log 2>&1; then
            echo "‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
            echo "success=true" >> $GITHUB_OUTPUT
            echo "strategy=$STRATEGY" >> $GITHUB_OUTPUT
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            RESOLVED_COUNT=$(git diff --cached --name-only | wc -l)
            echo "resolved-count=$RESOLVED_COUNT" >> $GITHUB_OUTPUT
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            echo "üìä –†–∞–∑—Ä–µ—à–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $RESOLVED_COUNT"
            
          else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
            echo "success=false" >> $GITHUB_OUTPUT
            echo "strategy=failed" >> $GITHUB_OUTPUT
            echo "resolved-count=0" >> $GITHUB_OUTPUT
          fi

          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥
          echo "üìù –õ–æ–≥ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤:"
          cat resolution.log || echo "–õ–æ–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
          echo "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å git:"
          git status --porcelain

      - name: Validate resolution
        if: steps.resolve.outputs.success == 'true'
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è..."

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –º–∞—Ä–∫–µ—Ä—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ (–∏—Å–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–∫–æ–Ω–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç —ç—Ç–∏ –º–∞—Ä–∫–µ—Ä—ã)
          if git grep -l "<<<<<<< HEAD" -- ':!MERGE_CONFLICT_RESOLUTION.md' ':!scripts/merge-conflict-resolver.js' ':!tests/merge-conflicts/*' ':!.github/workflows/merge-conflict-resolution.yml' > remaining_conflicts.txt 2>/dev/null; then
            if [ -s remaining_conflicts.txt ]; then
              echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∞—Ä–∫–µ—Ä—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö:"
              cat remaining_conflicts.txt
              exit 1
            fi
          fi

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞..."

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ JavaScript/TypeScript —Ñ–∞–π–ª–æ–≤
          for file in $(git diff --cached --name-only | grep -E '\.(js|ts|jsx|tsx)$'); do
            if [ -f "$file" ]; then
              echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: $file"
              if ! node -c "$file" 2>/dev/null; then
                echo "‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ $file"
                exit 1
              fi
            fi
          done

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ JSON —Ñ–∞–π–ª–æ–≤
          for file in $(git diff --cached --name-only | grep '\.json$'); do
            if [ -f "$file" ]; then
              echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ JSON: $file"
              if ! jq . "$file" >/dev/null 2>&1; then
                echo "‚ùå –û—à–∏–±–∫–∞ –≤ JSON —Ñ–∞–π–ª–µ $file"
                exit 1
              fi
            fi
          done

          echo "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"

      - name: Create resolution commit
        if: steps.resolve.outputs.success == 'true' && github.event_name != 'pull_request'
        run: |
          echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏..."

          # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          git add -A

          # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
          git commit -m "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è

          –°—Ç—Ä–∞—Ç–µ–≥–∏—è: ${{ steps.resolve.outputs.strategy }}
          –†–∞–∑—Ä–µ—à–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${{ steps.resolve.outputs.resolved-count }}
          Workflow: ${{ github.workflow }} (#${{ github.run_number }})

          ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏—Å—Ç–µ–º–æ–π —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤" || echo "–ù–µ—á–µ–≥–æ –∫–æ–º–º–∏—Ç–∏—Ç—å"

      - name: Push resolved changes
        if: steps.resolve.outputs.success == 'true' && github.event_name != 'pull_request'
        run: |
          echo "üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
          git push origin ${{ github.ref_name }} || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"

      - name: Upload resolution artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: conflict-resolution-${{ github.run_number }}
          path: |
            resolution.log
            merge-resolution-report-*.json
            .conflict-resolution-reports/
            .merge-backups/
          retention-days: 30

  monitoring-setup:
    name: üì° Setup Continuous Monitoring
    runs-on: ubuntu-latest
    needs: [detect-conflicts, resolve-conflicts]
    if: always() && (needs.detect-conflicts.outputs.has-conflicts == 'true' || github.event.inputs.enable_monitoring == 'true')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure monitoring
        run: |
          echo "üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."

          MONITORING_LEVEL="${{ github.event.inputs.notification_level || 'normal' }}"
          RESOLUTION_SUCCESS="${{ needs.resolve-conflicts.outputs.resolution-success }}"

          echo "üìã –£—Ä–æ–≤–µ–Ω—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $MONITORING_LEVEL"

          # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏
          if [ "$RESOLUTION_SUCCESS" = "false" ]; then
            # –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –≤–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
            MONITORING_INTERVAL=10000  # 10 —Å–µ–∫—É–Ω–¥
          elif [ "${{ needs.detect-conflicts.outputs.has-conflicts }}" = "true" ]; then
            # –ï—Å–ª–∏ –±—ã–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, –≤–∫–ª—é—á–∞–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
            MONITORING_INTERVAL=30000  # 30 —Å–µ–∫—É–Ω–¥
          else
            # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
            MONITORING_INTERVAL=60000  # 1 –º–∏–Ω—É—Ç–∞
          fi

          echo "‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ${MONITORING_INTERVAL}ms"

      - name: Test monitoring system
        run: |
          echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."

          # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
          chmod +x scripts/merge-monitor.js

          # –ó–∞–ø—É—Å–∫–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã
          timeout 30s node scripts/merge-monitor.js --interval=5000 --log-level=debug || echo "–¢–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω"

      - name: Schedule monitoring tasks
        run: |
          echo "üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."

          # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å cron-–∑–∞–¥–∞—á–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏
          # –î–ª—è GitHub Actions —Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

          cat > monitoring-config.json << EOF
          {
            "enabled": true,
            "interval": ${MONITORING_INTERVAL:-30000},
            "notificationLevel": "${{ github.event.inputs.notification_level || 'normal' }}",
            "repositoryUrl": "${{ github.repository }}",
            "workflow": "${{ github.workflow }}",
            "runId": "${{ github.run_id }}",
            "triggeredBy": "${{ github.event_name }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          }
          EOF

          echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"

      - name: Upload monitoring configuration
        uses: actions/upload-artifact@v4
        with:
          name: monitoring-config-${{ github.run_number }}
          path: |
            monitoring-config.json
          retention-days: 7

  notification-summary:
    name: üì¢ Resolution Summary & Notifications
    runs-on: ubuntu-latest
    needs: [detect-conflicts, resolve-conflicts, monitoring-setup]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate summary report
        run: |
          echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞..."

          HAS_CONFLICTS="${{ needs.detect-conflicts.outputs.has-conflicts }}"
          CONFLICT_COUNT="${{ needs.detect-conflicts.outputs.conflict-count }}"
          CONFLICT_FILES="${{ needs.detect-conflicts.outputs.conflict-files }}"
          RESOLUTION_SUCCESS="${{ needs.resolve-conflicts.outputs.resolution-success }}"
          RESOLVED_COUNT="${{ needs.resolve-conflicts.outputs.resolved-count }}"
          STRATEGY="${{ needs.resolve-conflicts.outputs.resolution-strategy }}"

          echo "## üîß –û—Ç—á–µ—Ç –æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**–í–µ—Ç–∫–∞:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "**–°–æ–±—ã—Ç–∏–µ:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–µ—Ç–µ–∫—Ü–∏–∏" >> $GITHUB_STEP_SUMMARY
          if [ "$HAS_CONFLICTS" = "true" ]; then
            echo "- **–°—Ç–∞—Ç—É—Å:** ‚ö†Ô∏è –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã" >> $GITHUB_STEP_SUMMARY
            echo "- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** $CONFLICT_COUNT —Ñ–∞–π–ª–æ–≤" >> $GITHUB_STEP_SUMMARY
            echo "- **–§–∞–π–ª—ã:** \`$CONFLICT_FILES\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **–°—Ç–∞—Ç—É—Å:** ‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "$HAS_CONFLICTS" = "true" ]; then
            echo "### üõ†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è" >> $GITHUB_STEP_SUMMARY
            if [ "$RESOLUTION_SUCCESS" = "true" ]; then
              echo "- **–°—Ç–∞—Ç—É—Å:** ‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏" >> $GITHUB_STEP_SUMMARY
              echo "- **–°—Ç—Ä–∞—Ç–µ–≥–∏—è:** $STRATEGY" >> $GITHUB_STEP_SUMMARY
              echo "- **–†–∞–∑—Ä–µ—à–µ–Ω–æ —Ñ–∞–π–ª–æ–≤:** $RESOLVED_COUNT" >> $GITHUB_STEP_SUMMARY
            else
              echo "- **–°—Ç–∞—Ç—É—Å:** ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ" >> $GITHUB_STEP_SUMMARY
              echo "- **–ü—Ä–∏—á–∏–Ω–∞:** –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          echo "### üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" >> $GITHUB_STEP_SUMMARY
          echo "- **–°—Ç–∞—Ç—É—Å:** ${{ needs.monitoring-setup.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:** ${{ github.event.inputs.notification_level || 'normal' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏" >> $GITHUB_STEP_SUMMARY
          if [ "$HAS_CONFLICTS" = "false" ]; then
            echo "- ‚úÖ –ù–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è" >> $GITHUB_STEP_SUMMARY
          elif [ "$RESOLUTION_SUCCESS" = "true" ]; then
            echo "- ‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã, –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É" >> $GITHUB_STEP_SUMMARY
            echo "- üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π" >> $GITHUB_STEP_SUMMARY
          else
            echo "- üö® **–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞**" >> $GITHUB_STEP_SUMMARY
            echo "- üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏: \`$CONFLICT_FILES\`" >> $GITHUB_STEP_SUMMARY
            echo "- üõ†Ô∏è –†–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä—É—á–Ω—É—é –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ commit" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create GitHub issue for manual intervention
        if: needs.detect-conflicts.outputs.has-conflicts == 'true' && needs.resolve-conflicts.outputs.resolution-success != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const conflictFiles = '${{ needs.detect-conflicts.outputs.conflict-files }}';
            const conflictCount = '${{ needs.detect-conflicts.outputs.conflict-count }}';
            const runUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';

            const issueBody = [
              'üö® –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è',
              '',
              '–î–µ—Ç–∞–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤:',
              '- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: ' + conflictCount,
              '- –ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ —Ñ–∞–π–ª—ã: ' + conflictFiles,
              '- –í–µ—Ç–∫–∞: ${{ github.ref_name }}',
              '- Workflow Run: ' + runUrl,
              '- –°–æ–±—ã—Ç–∏–µ: ${{ github.event_name }}',
              '- –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞: ' + new Date().toISOString(),
              '',
              '---',
              '',
              '## üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—é:',
              '',
              '1. –ü–æ–ª—É—á–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:',
              '   ```bash',
              '   git checkout ${{ github.ref_name }}',
              '   git pull origin ${{ github.ref_name }}',
              '   ```',
              '',
              '2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã:',
              '   - –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏ –≤ –≤–∞—à–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ',
              '   - –ù–∞–π–¥–∏—Ç–µ –º–∞—Ä–∫–µ—Ä—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: <<<<<<< HEAD, =======, >>>>>>> branch',
              '   - –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞ –∏–ª–∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è',
              '   - –£–¥–∞–ª–∏—Ç–µ –º–∞—Ä–∫–µ—Ä—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤',
              '',
              '3. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:',
              '   ```bash',
              '   git add <—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ_—Ñ–∞–π–ª—ã>',
              '   git commit -m "resolve: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è"',
              '   ```',
              '',
              '4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:',
              '   ```bash',
              '   git push origin ${{ github.ref_name }}',
              '   ```',
              '',
              '## ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ø—ã—Ç–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:',
              '',
              '–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø–æ–ø—ã—Ç–∞–ª–∞—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ç–∏ —Ñ–∞–π–ª—ã, –Ω–æ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:',
              '- –°–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∫–æ–¥–∞, —Ç—Ä–µ–±—É—é—â–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞',
              '- –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö',
              '- –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—â–∏–µ—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏—è',
              '',
              '## üìû –ü–æ–º–æ—â—å:',
              '',
              '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—é –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏–ª–∏ –∫ –∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.',
              '',
              '---',
              '',
              '–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ issue —Å–æ–∑–¥–∞–Ω–æ —Å–∏—Å—Ç–µ–º–æ–π —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è.'
            ].join('\n');

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® –†—É—á–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: ${conflictCount} —Ñ–∞–π–ª–æ–≤ - ${{ github.ref_name }}`,
              body: issueBody,
              labels: ['merge-conflicts', 'manual-intervention', 'high-priority', 'automated']
            });

      - name: Comment on PR
        if: github.event_name == 'pull_request' && needs.detect-conflicts.outputs.has-conflicts == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const conflictFiles = '${{ needs.detect-conflicts.outputs.conflict-files }}';
            const conflictCount = '${{ needs.detect-conflicts.outputs.conflict-count }}';
            const resolutionSuccess = '${{ needs.resolve-conflicts.outputs.resolution-success }}';
            const resolvedCount = '${{ needs.resolve-conflicts.outputs.resolved-count }}';

            let commentBody = `## üîß –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è\n\n`;

            if (resolutionSuccess === 'true') {
              commentBody += `‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!\n\n`;
              commentBody += `- üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${resolvedCount}\n`;
              commentBody += `- üõ†Ô∏è –°—Ç—Ä–∞—Ç–µ–≥–∏—è: ${{ needs.resolve-conflicts.outputs.resolution-strategy }}\n`;
              commentBody += `- ü§ñ –ò–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n`;
              commentBody += `–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å review —ç—Ç–æ–≥–æ PR.`;
            } else {
              commentBody += `‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, —Ç—Ä–µ–±—É—é—â–∏–µ —Ä—É—á–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è\n\n`;
              commentBody += `- üìä –§–∞–π–ª–æ–≤ —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏: ${conflictCount}\n`;
              commentBody += `- üìÅ –ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ —Ñ–∞–π–ª—ã: \`${conflictFiles}\`\n\n`;
              commentBody += `### üõ†Ô∏è –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:\n`;
              commentBody += `1. –ü–æ–ª—É—á–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ –≤–µ—Ç–∫–∏\n`;
              commentBody += `2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö\n`;
              commentBody += `3. –°–¥–µ–ª–∞–π—Ç–µ commit —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏\n`;
              commentBody += `4. Push –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–ø—É—Å—Ç–∏—Ç –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É\n\n`;
            }

            commentBody += `---\n*ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
